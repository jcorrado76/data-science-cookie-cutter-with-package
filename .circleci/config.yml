version: 2.1

orbs:
  python: circleci/python@2.1.1

jobs:
  run-cookiecutter:
    docker:
      - image: cimg/python:3.11.4
    steps:
      - run:
          name: Install pipx
          command: |
            pip install --user pipx && pipx ensurepath
      - run:
          name: Install Cookiecutter
          command: |
            pipx install cookiecutter
      - run:
          name: Install poetry
          command: |
            pipx install poetry
      - run:
          name: Download pyproject.toml before running cookiecutter to cache the poetry venvs
          command: |
            curl --output cache-pyproject.toml https://raw.githubusercontent.com/jcorrado76/data-science-cookie-cutter-with-package/main/%7B%7B%20cookiecutter.project_name%20%7D%7D/pyproject.toml
      - restore_cache:
            keys:
              - poetry-v1-{{ .Branch }}-{{ checksum "cache-pyproject.toml" }}
              - poetry-v1-{{ .Branch }}-
              - poetry-v1-
      - run:
          name: Run Cookiecutter
          command: |
            pipx run cookiecutter https://github.com/jcorrado76/data-science-cookie-cutter-with-package.git \
              --no-input
      - run: pwd && ls -al .

      - persist_to_workspace:
          root: .
          paths:
            - example_project
            - cache-pyproject.toml
            - /home/circleci/.cache/pypoetry/virtualenvs

      - save_cache:
          key: poetry-v1-{{ .Branch }}-{{ checksum "cache-pyproject.toml" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs/
  
  run-unit-tests:
    docker:
      - image: cimg/python:3.11.4
    working_directory: ~/example_project
    steps:
      - attach_workspace:
          at: ~/

      - run: pwd && ls -al .

      - python/install-packages:
          pkg-manager: poetry

      - run:
          name: Run unit tests
          command: |
            poetry run pytest tests


workflows:
  main:
    jobs:
      - run-cookiecutter
      - run-unit-tests:
          requires:
            - run-cookiecutter
